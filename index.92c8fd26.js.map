{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-bdf6827f99c81574.js","src/index.js","src/js/trending-search-main/trending-search.js","src/js/trending-search-main/fetch-images-url.js","node_modules/ultimate-pagination/src/ultimate-pagination.ts","node_modules/ultimate-pagination/src/ultimate-pagination-utils.ts","node_modules/ultimate-pagination/src/ultimate-pagination-item-factories.ts","node_modules/ultimate-pagination/src/ultimate-pagination-constants.ts","src/js/templates/film_gallery_template.js","node_modules/@parcel/runtime-js/lib/runtime-eeb618440ad444f2.js","src/js/movie-search/search-refs.js","src/js/movie-search/advanced-search.js","src/js/movie-search/search-by-keyword.js","src/js/movie_modal.js","src/js/movie-search/search-by-year.js","src/js/movie-search/search-by-genre.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.92c8fd26.js\\\",\\\"3Hue4\\\":\\\"desktop-empty-poster.c37d8ef5.jpg\\\",\\\"5UbS1\\\":\\\"index.2b9c06ff.css\\\",\\\"eM9ss\\\":\\\"library.3c46ba7a.js\\\"}\"));","import './js/authFireBase.js';\nimport './js/openModalWindow.js';\nimport './js/trending-search-main/trending-search.js';\nimport './js/dark-mode';\nimport './js/movie_modal';\nimport './js/scroll_to_top';\nimport './js/movie-search/search-by-keyword';\nimport './js/movie-search/search-by-year';\nimport './js/movie-search/search-by-genre';\nimport './js/movie-search/advanced-search';\nimport './js/openModalWindow.js';\nimport './js/canvas-header.js';\n","import fetchPopularFilms from './fetch-movies';\nimport getImages from './fetch-images-url';\n\nimport ultimatePagination from 'ultimate-pagination';\nimport { userSearchObj } from '../movie-search/search-by-keyword';\nimport {\n  userAdvancedSearchForPagination,\n  makeAdvancedSearch,\n} from '../movie-search/advanced-search.js';\nimport { spinnerStart, spinnerStop } from '../loader';\nimport { refs } from '../refs';\nimport { searchRefs, tmdbAPI, scrollToTop } from '../movie-search/search-refs';\nimport makeHMTLString from '../templates/film_gallery_template';\nimport { TmdbAPI } from '../movie-search/search-refs';\n\nexport const tooglePagination = {\n  isTrendingFilmsShown: true,\n  isFilmsByQueryShown: false,\n  isFilmsByYearShown: false,\n  isFilmsByGenreShown: false,\n  isFilmsByAdvancedSearchShown: false,\n};\nexport const paginationSettings = {\n  currentPage: 0,\n  totalPages: 0,\n  boundaryPagesRange: 1,\n  siblingPagesRange: 2,\n  hideEllipsis: false,\n  hidePreviousAndNextPagebtns: false,\n  hideFirstAndLastPagebtns: true,\n};\n\nlet screen = window.matchMedia('(max-width: 767px)');\nsetPaginationSettings(screen.matches);\nscreen.addEventListener('change', onChange);\n\nconst cardList = document.querySelector('.trending-gallery');\n\nasync function createMarkup(data) {\n  try {\n    const imageBaseURL = await getImages();\n    const genreNames = TmdbAPI.genres;\n\n    const markup = data\n      .map(item => {\n        const textDesc =\n          item.overview.length < 340\n            ? item.overview\n            : `${item.overview.slice(0, 340)}...`;\n        let genres = '';\n        const genresNamesToRender = getGenreDeciphered(item, genreNames);\n\n        if (genresNamesToRender.length > 2) {\n          genres = `<a class='find-by-genre-js trending-gallery__genre-name'>${genresNamesToRender[0]}</a>, <a class='find-by-genre-js trending-gallery__genre-name'>${genresNamesToRender[1]}</a>, Other | `;\n        } else if (genresNamesToRender.length === 2) {\n          genres = `<a class='find-by-genre-js trending-gallery__genre-name'>${genresNamesToRender[0]}</a>, <a class='find-by-genre-js trending-gallery__genre-name'>${genresNamesToRender[1]}</a> | `;\n        } else if (genresNamesToRender.length === 1) {\n          genres = `<a class='find-by-genre-js trending-gallery__genre-name'>${genresNamesToRender}</a> | `;\n        } else {\n          genres = genresNamesToRender;\n        }\n        return `<li class=\"trending-gallery__item\" data-id=\"${item.id}\">\n                  \n                    <div>\n                        <img src=\"${imageBaseURL}${item.poster_path}\"\n                            class=\"trending-gallery__image\" data-id=\"${item.id}\"\n                            alt=\"The poster of ${\n                              item.title\n                            } film \" onerror=\"this.onerror=null;this.src='https://images.unsplash.com/photo-1616530940355-351fabd9524b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1935&q=80';\"\n                            />\n\n                    </div>            \n                    <div class=\"trending-gallery__wrapper\">\n                        <h3 class=\"trending-gallery__title\" ><span class=\"title-modal-open\" data-id=\"${\n                          item.id\n                        }\">${item.title}</span>\n                        </h3>\n                              <p class=\"trending-gallery__info\">${genres}\n                              <span class=\"find-by-year-js\">${item.release_date.slice(\n                                0,\n                                4\n                              )}</span>\n                              </p>\n                    </div>\n                    <div class=\"trending-gallery__desc-wrap\">\n                    <h3 class=\"trending-gallery__title\" ><span class=\"title-modal-open\" data-id=\"${\n                      item.id\n                    }\">${item.title}</span>\n                        </h3>\n                        <p class=\"trending-gallery__info\">${genres}\n                              <span class=\"find-by-year-js\">${item.release_date.slice(\n                                0,\n                                4\n                              )}</span>\n                              </p>\n                        <p class=\"trending-gallery__desc\">${textDesc}</p>\n                        \n                        <button type=\"button\" class=\"trending-gallery__btn-more\">Read more</button>\n                    </div>\n                  \n                </li>`;\n      })\n      .join('');\n    return markup;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction getGenreDeciphered(filmObject, genresList) {\n  const genreArray = filmObject.genre_ids;\n  const genreNamesToRender = genreArray.map(item => {\n    return genresList[item];\n  });\n  return genreNamesToRender;\n}\n\nasync function renderPopularFilms(page) {\n  try {\n    cardList.innerHTML = '';\n    spinnerStart();\n    const films = await fetchPopularFilms(page);\n\n    const markup = await createMarkup(films.results);\n\n    cardList.innerHTML = markup;\n    paginationSettings.totalPages = films.total_pages;\n    tooglePagination.isTrendingFilmsShown = true;\n\n    if (films) renderPaginationInterface(page, paginationSettings.totalPages);\n  } catch (error) {\n    console.dir(error);\n  } finally {\n    setTimeout(() => {\n      spinnerStop();\n    }, 1000);\n  }\n}\n\nrenderPopularFilms(1);\nexport default renderPopularFilms;\n\nexport function deletePaginationInterface() {\n  refs.paginationContainer.removeEventListener('click', onLoadAnotherPage);\n  refs.filmsPaginationContainer.innerHTML = '';\n}\n\nexport function renderPaginationInterface(currentPage, totalPages) {\n  refs.filmsPaginationContainer.innerHTML = createPaginationInterface(\n    currentPage,\n    totalPages\n  );\n  refs.paginationContainer = document.querySelector('.pagination__container');\n  refs.paginationContainer.addEventListener('click', onLoadAnotherPage);\n}\n\nfunction onChange() {\n  const { currentPage, totalPages } = paginationSettings;\n  setPaginationSettings(screen.matches);\n  renderPaginationInterface(currentPage, totalPages);\n}\n\nasync function onLoadAnotherPage(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  try {\n    deletePaginationInterface();\n    const clickedBtn = e.target;\n    const indexOfPageToLoad = Number(clickedBtn.dataset.value);\n\n    if (tooglePagination.isTrendingFilmsShown) {\n      await renderPopularFilms(indexOfPageToLoad);\n      scrollToTop();\n      spinnerStart();\n      return;\n    } else if (tooglePagination.isFilmsByQueryShown) {\n      tmdbAPI.page = indexOfPageToLoad;\n\n      const response = await tmdbAPI.fetchFilmsByQuery(\n        userSearchObj.userQueryForPagination\n      );\n      scrollToTop();\n      spinnerStart();\n      const { data } = response;\n\n      searchRefs.galleryEl.innerHTML = makeHMTLString(data);\n      renderPaginationInterface(tmdbAPI.page, paginationSettings.totalPages);\n      return;\n    } else if (tooglePagination.isFilmsByYearShown) {\n      tmdbAPI.page = indexOfPageToLoad;\n      const response = await tmdbAPI.fetchMoviesByYear(\n        userSearchObj.userYearForPagination\n      );\n      scrollToTop();\n      spinnerStart();\n      const { data } = response;\n\n      searchRefs.galleryEl.innerHTML = makeHMTLString(data);\n      renderPaginationInterface(tmdbAPI.page, paginationSettings.totalPages);\n      return;\n    } else if (tooglePagination.isFilmsByGenreShown) {\n      tmdbAPI.page = indexOfPageToLoad;\n      const response = await tmdbAPI.fetchMoviesByGenre(\n        userSearchObj.userGenreForPagination\n      );\n      scrollToTop();\n      spinnerStart();\n      const { data } = response;\n\n      searchRefs.galleryEl.innerHTML = makeHMTLString(data);\n      renderPaginationInterface(tmdbAPI.page, paginationSettings.totalPages);\n      return;\n    } else if (tooglePagination.isFilmsByAdvancedSearchShown) {\n      userAdvancedSearchForPagination.page = indexOfPageToLoad;\n      tmdbAPI.page = indexOfPageToLoad;\n\n      scrollToTop();\n      spinnerStart();\n      searchRefs.galleryEl.innerHTML = makeAdvancedSearch(\n        userAdvancedSearchForPagination\n      );\n      return;\n    }\n  } catch (error) {\n    console.log(error);\n  } finally {\n    setTimeout(spinnerStop, 500);\n  }\n}\n\nfunction createPaginationInterface(currentPage, totalPages) {\n  paginationSettings.currentPage = currentPage;\n  paginationSettings.totalPages = totalPages;\n\n  const pagination = ultimatePagination.getPaginationModel(paginationSettings);\n\n  const btnsMarkup = pagination.map(createBtn).join('');\n\n  return `<ul class=\"pagination__container\">${btnsMarkup}</ul>`;\n}\n\nfunction createBtn(btnType) {\n  const { type, value, isActive, key } = btnType;\n  let modifier;\n  switch (type) {\n    case 'PREVIOUS_PAGE_LINK':\n      modifier = '--prev';\n      return isActive\n        ? createIconBtnTemplate(modifier, value, 'disabled')\n        : createIconBtnTemplate(modifier, value);\n\n    case 'NEXT_PAGE_LINK':\n      modifier = '--next';\n      return isActive\n        ? createIconBtnTemplate(modifier, value, 'disabled')\n        : createIconBtnTemplate(modifier, value);\n\n    case 'ELLIPSIS':\n      modifier = '--ellipsis';\n      return createIconBtnTemplate(modifier, value);\n\n    case 'PAGE':\n      modifier = '--active';\n      return createDigitBtnTemplate(modifier, value, isActive, 'disabled');\n  }\n}\n\nfunction setMobilePaginationSettings() {\n  paginationSettings.boundaryPagesRange = 0;\n  paginationSettings.hideEllipsis = true;\n}\n\nfunction setStandartPaginationSettings() {\n  paginationSettings.boundaryPagesRange = 1;\n  paginationSettings.hideEllipsis = false;\n}\n\nfunction setPaginationSettings(isMobile) {\n  if (isMobile) {\n    setMobilePaginationSettings();\n  } else {\n    setStandartPaginationSettings();\n  }\n}\n\nfunction createIconBtnTemplate(modifier, value, disabled = '') {\n  return ` <li class=\"pagination__element\">\n          <button type=\"button\" class=\"pagination__btn pagination__btn${modifier}\" data-value=${value} ${disabled}></button>\n        </li>`;\n}\nfunction createDigitBtnTemplate(modifier, value, isActive, disabled) {\n  return isActive\n    ? ` <li class=\"pagination__element\">\n          <button type=\"button\" class=\"pagination__btn pagination__btn${modifier}\" data-value=${value} ${disabled}>${value}</button>\n        </li>`\n    : ` <li class=\"pagination__element\">\n       <button type=\"button\" class=\"pagination__btn\" data-value=${value}>${value}</button>\n     </li>`;\n}\n","import API_KEY from './api-key';\n\nasync function getImages() {\n  try {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/configuration?api_key=${API_KEY}`\n    );\n    const parcedData = await data.json();\n    const { images } = parcedData;\n\n    const imageBaseURL = `${images.secure_base_url}${\n      images.profile_sizes[images.profile_sizes.length - 1]\n    }`;\n    return imageBaseURL;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default getImages;\n","import {createRange} from './ultimate-pagination-utils';\nimport {\n  createPageFunctionFactory,\n  createFirstEllipsis,\n  createSecondEllipsis,\n  createFirstPageLink,\n  createPreviousPageLink,\n  createNextPageLink,\n  createLastPageLink,\n  PaginationModelItem\n} from './ultimate-pagination-item-factories';\n\nexport interface PaginationModelOptions {\n  currentPage: number;\n  totalPages: number;\n  boundaryPagesRange?: number;\n  siblingPagesRange?: number;\n  hideEllipsis?: boolean;\n  hidePreviousAndNextPageLinks?: boolean;\n  hideFirstAndLastPageLinks?: boolean;\n}\n\nexport {PaginationModelItem};\n\nexport type PaginationModel = PaginationModelItem[];\n\nexport function getPaginationModel(options: PaginationModelOptions): PaginationModel {\n  if (options == null) { throw new Error('getPaginationModel(): options object should be a passed'); }\n\n  const totalPages = Number(options.totalPages);\n  if (isNaN(totalPages)) { throw new Error('getPaginationModel(): totalPages should be a number'); }\n  if (totalPages < 0) { throw new Error('getPaginationModel(): totalPages shouldn\\'t be a negative number'); }\n\n  const currentPage = Number(options.currentPage);\n  if (isNaN(currentPage)) { throw new Error('getPaginationModel(): currentPage should be a number'); }\n  if (currentPage < 0) { throw new Error('getPaginationModel(): currentPage shouldn\\'t be a negative number'); }\n  if (currentPage > totalPages) { throw new Error('getPaginationModel(): currentPage shouldn\\'t be greater than totalPages'); }\n\n  const boundaryPagesRange = (options.boundaryPagesRange == null ? 1 : Number(options.boundaryPagesRange));\n  if (isNaN(boundaryPagesRange)) { throw new Error('getPaginationModel(): boundaryPagesRange should be a number'); }\n  if (boundaryPagesRange < 0) { throw new Error('getPaginationModel(): boundaryPagesRange shouldn\\'t be a negative number'); }\n\n  const siblingPagesRange = (options.siblingPagesRange == null ? 1 : Number(options.siblingPagesRange));\n  if (isNaN(siblingPagesRange)) { throw new Error('getPaginationModel(): siblingPagesRange should be a number'); }\n  if (siblingPagesRange < 0) { throw new Error('getPaginationModel(): siblingPagesRange shouldn\\'t be a negative number'); }\n\n  const hidePreviousAndNextPageLinks = Boolean(options.hidePreviousAndNextPageLinks);\n  const hideFirstAndLastPageLinks = Boolean(options.hideFirstAndLastPageLinks);\n  const hideEllipsis = Boolean(options.hideEllipsis);\n\n  const ellipsisSize = (hideEllipsis ? 0 : 1);\n  const paginationModel: PaginationModelItem[] = [];\n  const createPage = createPageFunctionFactory(options);\n\n  if (!hideFirstAndLastPageLinks) {\n    paginationModel.push(createFirstPageLink(options));\n  }\n\n  if (!hidePreviousAndNextPageLinks) {\n    paginationModel.push(createPreviousPageLink(options));\n  }\n\n  // Simplify generation of pages if number of available items is equal or greater than total pages to show\n  if (1 + 2 * ellipsisSize + 2 * siblingPagesRange + 2 * boundaryPagesRange >= totalPages) {\n    const allPages = createRange(1,  totalPages).map(createPage);\n    paginationModel.push(...allPages);\n  } else {\n    // Calculate group of first pages\n    const firstPagesStart = 1;\n    const firstPagesEnd = boundaryPagesRange;\n    const firstPages = createRange(firstPagesStart,  firstPagesEnd).map(createPage);\n\n    // Calculate group of last pages\n    const lastPagesStart = totalPages + 1 - boundaryPagesRange;\n    const lastPagesEnd = totalPages;\n    const lastPages = createRange(lastPagesStart, lastPagesEnd).map(createPage);\n\n    // Calculate group of main pages\n    const mainPagesStart = Math.min(\n      Math.max(\n        currentPage - siblingPagesRange,\n        firstPagesEnd + ellipsisSize + 1\n      ),\n      lastPagesStart - ellipsisSize - 2 * siblingPagesRange - 1\n    );\n    const mainPagesEnd = mainPagesStart + 2 * siblingPagesRange;\n    const mainPages = createRange(mainPagesStart,  mainPagesEnd).map(createPage);\n\n    // Add group of first pages\n    paginationModel.push(...firstPages);\n\n    if (!hideEllipsis) {\n      // Calculate and add ellipsis before group of main pages\n      const firstEllipsisPageNumber = mainPagesStart - 1;\n      const showPageInsteadOfFirstEllipsis = (firstEllipsisPageNumber === firstPagesEnd + 1);\n      const createFirstEllipsisOrPage = showPageInsteadOfFirstEllipsis ? createPage : createFirstEllipsis;\n      const firstEllipsis = createFirstEllipsisOrPage(firstEllipsisPageNumber);\n      paginationModel.push(firstEllipsis);\n    }\n\n    // Add group of main pages\n    paginationModel.push(...mainPages);\n\n    if (!hideEllipsis) {\n      // Calculate and add ellipsis after group of main pages\n      const secondEllipsisPageNumber = mainPagesEnd + 1;\n      const showPageInsteadOfSecondEllipsis = (secondEllipsisPageNumber === lastPagesStart - 1);\n      const createSecondEllipsisOrPage = showPageInsteadOfSecondEllipsis ? createPage : createSecondEllipsis;\n      const secondEllipsis = createSecondEllipsisOrPage(secondEllipsisPageNumber);\n      paginationModel.push(secondEllipsis);\n    }\n\n    // Add group of last pages\n    paginationModel.push(...lastPages);\n  }\n\n  if (!hidePreviousAndNextPageLinks) {\n    paginationModel.push(createNextPageLink(options));\n  }\n\n  if (!hideFirstAndLastPageLinks) {\n    paginationModel.push(createLastPageLink(options));\n  }\n\n  return paginationModel;\n}\n\nexport {ITEM_TYPES, ITEM_KEYS, PaginationItemType} from './ultimate-pagination-constants';\n","export function createRange(start: number, end: number): number[] {\n  let range: number[] = [];\n  for (let i = start; i <= end; i++) {\n    range.push(i);\n  }\n  return range;\n}\n","import {ITEM_TYPES, ITEM_KEYS, PaginationItemType} from './ultimate-pagination-constants';\nimport {PaginationModelOptions} from './ultimate-pagination';\n\nexport interface PaginationModelItem {\n    key: number;\n    value: number;\n    isActive: boolean;\n    type: PaginationItemType;\n}\n\nexport const createFirstEllipsis = (pageNumber: number): PaginationModelItem => {\n  return {\n    type: ITEM_TYPES.ELLIPSIS,\n    key: ITEM_KEYS.FIRST_ELLIPSIS,\n    value: pageNumber,\n    isActive: false\n  };\n};\n\nexport const createSecondEllipsis = (pageNumber: number): PaginationModelItem => {\n  return {\n    type: ITEM_TYPES.ELLIPSIS,\n    key: ITEM_KEYS.SECOND_ELLIPSIS,\n    value: pageNumber,\n    isActive: false\n  };\n};\n\nexport const createFirstPageLink = (options: PaginationModelOptions): PaginationModelItem => {\n  let {currentPage} = options;\n\n  return {\n    type: ITEM_TYPES.FIRST_PAGE_LINK,\n    key: ITEM_KEYS.FIRST_PAGE_LINK,\n    value: 1,\n    isActive: currentPage === 1\n  };\n};\n\nexport const createPreviousPageLink = (options: PaginationModelOptions): PaginationModelItem => {\n  let {currentPage} = options;\n\n  return {\n    type: ITEM_TYPES.PREVIOUS_PAGE_LINK,\n    key: ITEM_KEYS.PREVIOUS_PAGE_LINK,\n    value: Math.max(1, currentPage - 1),\n    isActive: currentPage === 1\n   };\n};\n\nexport const createNextPageLink = (options: PaginationModelOptions): PaginationModelItem => {\n  let {currentPage, totalPages} = options;\n\n  return {\n    type: ITEM_TYPES.NEXT_PAGE_LINK,\n    key: ITEM_KEYS.NEXT_PAGE_LINK,\n    value: Math.min(totalPages, currentPage + 1),\n    isActive: currentPage === totalPages\n  };\n};\n\nexport const createLastPageLink = (options: PaginationModelOptions): PaginationModelItem => {\n  let {currentPage, totalPages} = options;\n\n  return {\n    type: ITEM_TYPES.LAST_PAGE_LINK,\n    key: ITEM_KEYS.LAST_PAGE_LINK,\n    value: totalPages,\n    isActive: currentPage === totalPages\n   };\n};\n\nexport const createPageFunctionFactory = (options: PaginationModelOptions) => {\n  let {currentPage} = options;\n\n  return (pageNumber: number): PaginationModelItem => {\n    return {\n      type: ITEM_TYPES.PAGE,\n      key: pageNumber,\n      value: pageNumber,\n      isActive: pageNumber === currentPage\n    };\n  };\n};\n","export type PageItemType = 'PAGE';\nexport type EllipsisItemType = 'ELLIPSIS';\nexport type FirstPageLinkItemType = 'FIRST_PAGE_LINK';\nexport type PreviousPageLinkItemType = 'PREVIOUS_PAGE_LINK';\nexport type NextPageLinkItemType = 'NEXT_PAGE_LINK';\nexport type LastPageLinkItemType = 'LAST_PAGE_LINK';\n\nexport type PaginationItemType =\n  PageItemType |\n  EllipsisItemType |\n  FirstPageLinkItemType |\n  PreviousPageLinkItemType |\n  NextPageLinkItemType |\n  LastPageLinkItemType;\n\nexport interface ItemTypes {\n    PAGE: PageItemType;\n    ELLIPSIS: EllipsisItemType;\n    FIRST_PAGE_LINK: FirstPageLinkItemType;\n    PREVIOUS_PAGE_LINK: PreviousPageLinkItemType;\n    NEXT_PAGE_LINK: NextPageLinkItemType;\n    LAST_PAGE_LINK: LastPageLinkItemType;\n}\n\nexport interface ItemKeys {\n    FIRST_ELLIPSIS: number;\n    SECOND_ELLIPSIS: number;\n    FIRST_PAGE_LINK: number;\n    PREVIOUS_PAGE_LINK: number;\n    NEXT_PAGE_LINK: number;\n    LAST_PAGE_LINK: number;\n\n    [type: string]: number;\n}\n\nexport const ITEM_TYPES: ItemTypes = {\n  PAGE: 'PAGE',\n  ELLIPSIS: 'ELLIPSIS',\n  FIRST_PAGE_LINK: 'FIRST_PAGE_LINK',\n  PREVIOUS_PAGE_LINK: 'PREVIOUS_PAGE_LINK',\n  NEXT_PAGE_LINK: 'NEXT_PAGE_LINK',\n  LAST_PAGE_LINK: 'LAST_PAGE_LINK'\n};\n\nexport const ITEM_KEYS: ItemKeys = {\n  FIRST_ELLIPSIS: -1,\n  SECOND_ELLIPSIS: -2,\n  FIRST_PAGE_LINK: -3,\n  PREVIOUS_PAGE_LINK: -4,\n  NEXT_PAGE_LINK: -5,\n  LAST_PAGE_LINK: -6\n};\n\n","import TmdbAPI from '../TMDB_API';\nimport emptyphoto from '../../images/empty-photo/desktop-empty-poster.jpg';\n\n//converts string with genre names to HTML string with tags\nfunction getGenresHTMLString(str) {\n  if (!str || str === '') {\n    return `<a>Other</a>`;\n  }\n  const indexOfOther = str.toLowerCase().indexOf('other');\n  let spliced = '';\n  if (indexOfOther !== -1) {\n    str = str.slice(0, indexOfOther);\n    spliced = 'Other';\n  }\n  return (\n    str\n      .split(',')\n      .map(el => {\n        return `<a class='find-by-genre-js trending-gallery__genre-name'>${el}</a>`;\n      })\n      .join(', ') + spliced\n  );\n}\n\nfunction addAdaptiveImgHTMLString(result) {\n  // // ----------\n  let poster = result.poster_path;\n  poster = result.poster_path;\n\n  if (poster && poster !== '') {\n    poster = result.poster_path;\n  } else {\n    return `<picture>\n  \t<img src=\"${emptyphoto}\" alt=\"The poster of ${result.title} film\" class=\"trending-gallery__image\" loading=\"lazy\" data-id=\"${result.id}\"/>\n\t</picture>`;\n  }\n  //     // ----------\n\n  return `\n\t<picture>\n\t\t<source srcset=\"${TmdbAPI.IMG_BASE_URL}/w185${result.poster_path} 185w, ${TmdbAPI.IMG_BASE_URL}/w342${result.poster_path} 342w, ${TmdbAPI.IMG_BASE_URL}/w500${result.poster_path} 500w\" media=\"(max-width: 767px)\" sizes=\"280px\">\n\t\t<source srcset=\"${TmdbAPI.IMG_BASE_URL}/w342${result.poster_path} 342w, ${TmdbAPI.IMG_BASE_URL}/w500${result.poster_path} 500w\" media=\"(min-width: 768px)\" sizes=\"336px\">\n\t\t<source srcset=\"${TmdbAPI.IMG_BASE_URL}/w500${result.poster_path} 500w, ${TmdbAPI.IMG_BASE_URL}/w780${result.poster_path} 780w\" media=\"(min-width: 1280px)\" sizes=\"395px\">\n\n  \t<img src=\"${TmdbAPI.IMG_BASE_URL}/original${result.poster_path}\" alt=\"The poster of ${result.title} film\" class=\"trending-gallery__image\" loading=\"lazy\" data-id=\"${result.id}\"/>\n\t</picture>`;\n}\n\nexport default function makeHMTLString({ results }) {\n  return results\n    .map(result => {\n      const textDesc =\n        result.overview.length < 340\n          ? result.overview\n          : `${result.overview.slice(0, 340)}...`;\n      const genres = getGenresHTMLString(\n        TmdbAPI.getGenresString(result.genre_ids)\n      );\n      //checking release date: if none - return 'No info', else return year\n      if (!result.release_date || result.release_date === '') {\n        result.release_date = 'No info';\n      } else {\n        result.release_date = result.release_date.slice(0, 4);\n      }\n      return `\n\t<li class='trending-gallery__item' data-id=${result.id}>\n    ${addAdaptiveImgHTMLString(result)}\n    <div class=\"trending-gallery__wrapper\">\n    \t<h3 class='trending-gallery__title' ><span  class=\"title-modal-open\" data-id=${\n        result.id\n      }>${result.title}</span>\n\t\t\t</h3>\n    \t<p class='trending-gallery__info'>${getGenresHTMLString(\n        TmdbAPI.getGenresString(result.genre_ids)\n      )} | <span class='find-by-year-js'>${result.release_date}</span></p>\n    </div>\n    <div class=\"trending-gallery__desc-wrap\">\n                    <h3 class=\"trending-gallery__title\" ><span class=\"title-modal-open\" data-id=\"${\n                      result.id\n                    }\">${result.title}</span>\n                        </h3>\n                        <p class=\"trending-gallery__info\">${genres}\n                              <span class=\"find-by-year-js\">${result.release_date.slice(\n                                0,\n                                4\n                              )}</span>\n                              </p>\n                        <p class=\"trending-gallery__desc\">${textDesc}</p>\n                        \n                        <button type=\"button\" class=\"trending-gallery__btn-more\">Read more</button>\n                    </div>\n  </li>\n\t`;\n    })\n    .join('');\n}\n\nexport function makeHMTLStringWithGenre({ results }, genre) {\n  return results\n    .map(result => {\n      //checking release date: if none - return 'No info', else return year\n      if (!result.release_date || result.release_date === '') {\n        result.release_date = 'No info';\n      } else {\n        result.release_date = result.release_date.slice(0, 4);\n      }\n      const textDesc =\n        result.overview.length < 340\n          ? result.overview\n          : `${result.overview.slice(0, 340)}...`;\n      const genres = getGenresHTMLString(\n        TmdbAPI.getGenresStringWithSearchedGenre(result.genre_ids, genre)\n      );\n      return `\n\t<li class='trending-gallery__item'  data-id=\"${result.id}\">\n    ${addAdaptiveImgHTMLString(result)}\n    <div class=\"trending-gallery__wrapper\">\n    \t<h3 class='trending-gallery__title'><span class=\"title-modal-open\">${\n        result.title\n      }</span></h3>\n    \t<p class='trending-gallery__info'>${genres} | <span class='find-by-year-js'>${result.release_date.slice(\n        0,\n        4\n      )}</span></p>\n    </div>\n    <div class=\"trending-gallery__desc-wrap\">\n                    <h3 class=\"trending-gallery__title\" ><span class=\"title-modal-open\" data-id=\"${\n                      result.id\n                    }\">${result.title}</span>\n                        </h3>\n                        <p class=\"trending-gallery__info\">${genres}\n                              <span class=\"find-by-year-js\">${result.release_date.slice(\n                                0,\n                                4\n                              )}</span>\n                              </p>\n                        <p class=\"trending-gallery__desc\">${textDesc}</p>\n                        \n                        <button type=\"button\" class=\"trending-gallery__btn-more\">Read more</button>\n                    </div>\n  </li>\n\t`;\n    })\n    .join('');\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3Hue4\")).toString();","import { Notify } from 'notiflix';\nimport TmdbAPI from '../TMDB_API';\n\nconst emptyStingRegEx = /^\\s*$/; // regular expression of an empty string\nconst tmdbAPI = new TmdbAPI();\ntmdbAPI.fetchGenres();\n\nconst searchRefs = {\n  galleryEl: document.querySelector('.trending-gallery'),\n  searchInputEl: document.querySelector('.search__input'),\n  searchForm: document.querySelector('.search'),\n  showAdvancedSearchEl: document.querySelector('.show-advanced-search-js'),\n  hideAdvancedSearchEl: document.querySelector('.hide-advanced-search-js'),\n  advancedSearchEl: document.querySelector('.search--advanced-js '),\n  advancedSearchWrap: document.querySelector('.search--advanced-js div '),\n  advancedSearchChosenWindowEl: document.querySelector(\n    '.advanced-search__chosen-window'\n  ),\n  advancedSearchChosenEl: document.querySelector('.advanced-search__chosen'),\n  resetAdvancedSearchBtn: document.querySelector('.advanced-search__reset'),\n  advacedSearchSubmitBtn: document.querySelector('.advanced-search__submit'),\n  advacedSearchYearInput: document.querySelector('.advanced-search__year'),\n};\n\n//scroll to the top of the page\nfunction scrollToTop() {\n  window.scroll({\n    top: 0,\n    left: 0,\n    behavior: 'smooth',\n  });\n}\n\nexport { searchRefs, tmdbAPI, TmdbAPI, scrollToTop, emptyStingRegEx, Notify };\n","import makeHMTLString from '../templates/film_gallery_template';\nimport {\n  searchRefs,\n  tmdbAPI,\n  TmdbAPI,\n  scrollToTop,\n  emptyStingRegEx,\n  Notify,\n} from './search-refs';\n\nimport renderPopularFilms, {\n  renderPaginationInterface,\n  paginationSettings,\n  deletePaginationInterface,\n  tooglePagination,\n} from '../trending-search-main/trending-search.js';\nimport { canvasAnimation } from '../canvas-header.js';\n\nexport let userAdvancedSearchForPagination = {\n  primary_release_year: '',\n  with_genres: '',\n  sort_by: '',\n  page: '',\n  with_watch_monetization_types: '',\n  without_genres: '',\n};\nlet areOptionsGenerated = false;\n\nsearchRefs.searchForm.addEventListener('click', showAdvancedSearch);\nsearchRefs.searchForm.addEventListener('click', hideAdvancedSearch);\nsearchRefs.advancedSearchEl.addEventListener(\n  'submit',\n  onAdvancedSearchElSubmit\n);\nsearchRefs.resetAdvancedSearchBtn.addEventListener(\n  'click',\n  onResetAdvancedSearch\n);\n\nexport function showAdvancedSearch(event) {\n  if (!event.target.classList.value.includes('show-advanced-search-js')) return;\n  toggleAdvacedSearchMenu();\n}\n\nexport function toggleAdvacedSearchMenu() {\n  setTimeout(() => toggleAdvancedSearch(), 100);\n  if (areOptionsGenerated) return;\n  generateSelectOptions(searchRefs.advancedSearchWrap);\n}\nexport function showAdvacedSearchMenu() {\n  setTimeout(() => {\n    searchRefs.advancedSearchEl.classList.remove('visually');\n    searchRefs.showAdvancedSearchEl.parentNode.classList.add('visually-hidden');\n    searchRefs.hideAdvancedSearchEl.parentNode.classList.remove(\n      'visually-hidden'\n    );\n  }, 100);\n\n  if (areOptionsGenerated) return;\n  generateSelectOptions(searchRefs.advancedSearchWrap);\n}\n\nfunction hideAdvancedSearch(event) {\n  if (!event.target.classList.value.includes('hide-advanced-search-js')) return;\n  toggleAdvancedSearch();\n}\n\nexport function toggleAdvancedSearch() {\n  searchRefs.advancedSearchEl.classList.toggle('visually');\n  searchRefs.showAdvancedSearchEl.parentNode.classList.toggle(\n    'visually-hidden'\n  );\n  searchRefs.hideAdvancedSearchEl.parentNode.classList.toggle(\n    'visually-hidden'\n  );\n}\n\nfunction generateSelectOptions(form) {\n  const genreOptionsHtmlStr = Object.values(TmdbAPI.genres)\n    .map(\n      genre =>\n        `<option value=\"${genre}\" class=\"advanced-search__option\">${genre}</option>`\n    )\n    .join('');\n  const selectGenreHtmlStr = `\n\t\t<select name=\"genre\"  class=\"advanced-search__genre advanced-search__select\">\n\t\t\t<option value=\"\" class=\"advanced-search__option--main\">Choose genre to find</option>\n\t\t\t${genreOptionsHtmlStr}\n\t\t</select>`;\n  //forming exlude genre select HTML\n  const excludeGenreHtmlStr = `\n\t\t<select name=\"excludeGenre\" \n\t\t\tclass=\"advanced-search__exlude-genre advanced-search__select\">\n\t\t\t<option value=\"\" class=\"advanced-search__option--main\">Choose genre to exlude</option>\n\t\t\t${genreOptionsHtmlStr}\n\t\t</select>`;\n  //forming sort parameters select HTML\n  const sortParamsStr = `\n\t\t<select name=\"sortParams\" \t\tclass=\"advanced-search__sort-buy advanced-search__select\">\n\t\t\t<option value=\"\" class=\"advanced-search__option--main\">Choose sorting parameter</option>\n\t\t\t${Object.keys(TmdbAPI.sort_by_types)\n        .map(\n          typeKey =>\n            `<option value=\"${typeKey}\" class=\"advanced-search__option\">${TmdbAPI.sort_by_types[typeKey]}</option>`\n        )\n        .join('')}\n\t\t</select>`;\n  form.insertAdjacentHTML(\n    'afterbegin',\n    selectGenreHtmlStr + excludeGenreHtmlStr + sortParamsStr\n  );\n  areOptionsGenerated = true;\n}\n\nfunction chosenAdvSearchParamsString(optionsObj) {\n  return Object.keys(optionsObj).reduce((acc, key) => {\n    if (!optionsObj[key] || optionsObj[key] === '' || key === 'page')\n      return acc;\n    if (key === 'with_genres' || key === 'without_genres') {\n      return (\n        acc +\n        `<div class='advanced-search__chosen-option'><span class='advanced-search__search-key'>${key\n          .split('_')\n          .join(' ')}: </span>${TmdbAPI.genres[optionsObj[key]]}</div>`\n      );\n    }\n    return (\n      acc +\n      `<div class='advanced-search__chosen-option'><span class='advanced-search__search-key'>${key\n        .split('_')\n        .join(' ')}: </span>${optionsObj[key]}</div>`\n    );\n  }, '');\n}\n\nexport function makeAdvancedSearch(optionsObj) {\n  tmdbAPI\n    .fetchAdvancedMovieSearch(optionsObj)\n    .then(response => {\n      const { data } = response;\n\n      scrollToTop();\n      searchRefs.galleryEl.innerHTML = makeHMTLString(response.data);\n      tooglePagination.isTrendingFilmsShown = false;\n      tooglePagination.isFilmsByQueryShown = false;\n      tooglePagination.isFilmsByAdvancedSearchShown = true;\n      tooglePagination.isFilmsByYearShown = false;\n      tooglePagination.isFilmsByGenreShown = false;\n      if (data.total_pages > 500) {\n        paginationSettings.totalPages = 500;\n      } else {\n        paginationSettings.totalPages = data.total_pages;\n      }\n      renderPaginationInterface(tmdbAPI.page, paginationSettings.totalPages);\n    })\n    .catch(console.error);\n}\n\nfunction clearAdvancedSearchForm() {\n  searchRefs.advancedSearchEl.reset();\n}\n\nfunction changeAdvSearchWindow(obj) {\n  searchRefs.advancedSearchChosenWindowEl.classList.remove('visually-hidden');\n  searchRefs.advancedSearchChosenEl.innerHTML = `${chosenAdvSearchParamsString(\n    obj\n  )}`;\n}\n\nfunction hideAdvSearchWindow() {\n  searchRefs.advancedSearchChosenWindowEl.classList.add('visually-hidden');\n  searchRefs.advancedSearchChosenEl.innerHTML = ``;\n}\n\n//callback function for event listener on button submit - when the advanced search form is submitted and on reset\nfunction onAdvancedSearchElSubmit(event) {\n  event.preventDefault();\n  //forming advanced search object\n  const optionsObj = {\n    with_genres: TmdbAPI.genreIDs[searchRefs.advancedSearchEl.genre.value],\n    without_genres:\n      TmdbAPI.genreIDs[searchRefs.advancedSearchEl.excludeGenre.value],\n    sort_by:\n      TmdbAPI.sort_by_types[searchRefs.advancedSearchEl.sortParams.value],\n    with_watch_monetization_types:\n      TmdbAPI.watch_monetization_types[\n        searchRefs.advancedSearchEl.monetization.value\n      ],\n  };\n\n  //check if nothing chosen\n  if (!isOptionsObjHasValues(optionsObj)) {\n    Notify.failure('Choose some parameters!');\n\n    return;\n  }\n  tmdbAPI.page = 1;\n\n  tooglePagination.isFilmsByYearShown = true;\n  //checking search year input\n  let searchYear = searchRefs.advancedSearchEl.year.value;\n\n  if (!checkYear(searchYear)) {\n    // searchYear = new Date().getFullYear();\n    Notify.failure('The year chosen is ineligible!');\n    clearAdvancedSearchForm();\n    return;\n  }\n\n  optionsObj.primary_release_year = searchYear;\n\n  let isTheSameSettings = true;\n  Object.keys(optionsObj).forEach(key => {\n    if (optionsObj[key] !== userAdvancedSearchForPagination[key])\n      isTheSameSettings = false;\n  });\n\n  //checking if included and excluded genre are not equal\n  if (\n    optionsObj.with_genres === optionsObj.without_genres &&\n    optionsObj.with_genres !== undefined &&\n    optionsObj.without_genres !== undefined\n  ) {\n    Notify.failure(\"You can't choose and exclude the same genre!\");\n    clearAdvancedSearchForm();\n    return;\n  }\n\n  if (isTheSameSettings) {\n    Notify.warning('Please,make changes in search params and try again');\n    clearAdvancedSearchForm();\n    // renderPopularFilms(1);\n    return;\n  }\n\n  optionsObj.page = tmdbAPI.page;\n  userAdvancedSearchForPagination.with_genres = optionsObj.with_genres;\n  userAdvancedSearchForPagination.without_genres = optionsObj.without_genres;\n  userAdvancedSearchForPagination.sort_by = optionsObj.sort_by;\n  userAdvancedSearchForPagination.primary_release_year =\n    optionsObj.primary_release_year;\n  userAdvancedSearchForPagination.with_watch_monetization_types =\n    optionsObj.with_watch_monetization_types;\n\n  userAdvancedSearchForPagination.page = optionsObj.page;\n\n  deletePaginationInterface();\n  clearAdvancedSearchForm();\n  Notify.info('Searching');\n  changeAdvSearchWindow(userAdvancedSearchForPagination);\n  makeAdvancedSearch(optionsObj);\n}\n\nexport async function onResetAdvancedSearch() {\n  clearAdvancedSearchForm();\n  tooglePagination.isFilmsByYearShown = false;\n  tooglePagination.isFilmsByGenreShown = false;\n  tooglePagination.isFilmsByQueryShown = false;\n  tooglePagination.isFilmsByAdvancedSearchShown = false;\n  tooglePagination.isTrendingFilmsShown = true;\n  searchRefs.advancedSearchChosenWindowEl.classList.add('visually-hidden');\n  await renderPopularFilms(1);\n}\n\nfunction checkYear(searchYear) {\n  if (searchYear === '') return true;\n  searchYear = Number.parseInt(searchYear);\n  if (\n    searchYear &&\n    searchYear > 1880 &&\n    searchYear <= new Date().getFullYear()\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction isOptionsObjHasValues(optionsObj) {\n  let result = false;\n  //if film year entered - object has values\n  if (searchRefs.advancedSearchEl.year.value !== '') return true;\n  Object.values(optionsObj).forEach(value => {\n    if (value !== undefined && !emptyStingRegEx.test(value)) {\n      result = true;\n    }\n  });\n  return result;\n}\n","import makeHMTLString from '../templates/film_gallery_template';\nimport {\n  searchRefs,\n  tmdbAPI,\n  TmdbAPI,\n  emptyStingRegEx,\n  Notify,\n  scrollToTop,\n} from './search-refs';\n\nimport {\n  renderPaginationInterface,\n  paginationSettings,\n  deletePaginationInterface,\n  tooglePagination,\n} from '../trending-search-main/trending-search.js';\n\nimport renderPopularFilms from '../trending-search-main/trending-search';\nimport { onResetAdvancedSearch } from './advanced-search.js';\n\nwindow.onResetAdvancedSearch = () => {\n  onResetAdvancedSearch();\n};\nexport const userSearchObj = {\n  userQueryForPagination: '',\n  userYearForPagination: '',\n  userGenreForPagination: '',\n};\n\n// export let userQueryForPagination = '';\nsearchRefs.searchForm.addEventListener('submit', onSearchInputElChange);\n\nasync function onSearchInputElChange(event) {\n  event.preventDefault();\n  deletePaginationInterface();\n  searchRefs.advancedSearchChosenWindowEl.classList.add('visually-hidden');\n  const query = searchRefs.searchInputEl.value;\n  userSearchObj.userQueryForPagination = query;\n\n  searchRefs.searchInputEl.value = '';\n  //if input is an empty string - return\n  if (emptyStingRegEx.test(query)) return;\n  try {\n    tmdbAPI.page = 1;\n    const response = await tmdbAPI.fetchFilmsByQuery(query);\n    const { data } = response;\n\n    //if nothing found by entered keyword - show trending\n    if (data.total_results === 0) {\n      Notify.failure(\n        'Search result not successful. Enter the correct movie name and try again!'\n      );\n      renderPopularFilms(1);\n      return;\n    }\n    scrollToTop();\n\n    //showing search parameters window\n    searchRefs.advancedSearchChosenWindowEl.classList.remove('visually-hidden');\n    searchRefs.advancedSearchChosenEl.innerHTML = `<div class='advanced-search__chosen-option'>\n    <span class='advanced-search__search-key'>search word: </span>${query}\n     <button class=\"advanced-search__reset advanced-search__key-reset\" type=\"button\" onclick='onResetAdvancedSearch()'>Reset</button>\n     </div>`;\n    //inserting images into gallery\n    searchRefs.galleryEl.innerHTML = makeHMTLString(data);\n    tooglePagination.isTrendingFilmsShown = false;\n    tooglePagination.isFilmsByGenreShown = false;\n    tooglePagination.isFilmsByYearShown = false;\n    tooglePagination.isFilmsByAdvancedSearchShown = false;\n    tooglePagination.isFilmsByQueryShown = true;\n    paginationSettings.totalPages = data.total_pages;\n    renderPaginationInterface(tmdbAPI.page, paginationSettings.totalPages);\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import {\n  auth,\n  writeUserDataQueue,\n  writeUserDataWatch,\n  currentFilmList,\n  readAllUserData,\n} from './authFireBase.js';\nimport { refs } from './refs';\nimport Notiflix from 'notiflix';\nimport { renderModal } from './render_modal';\nimport { onTrailerBtnClick } from './trailer';\n\nconst { allCardsSection, modal, overflow, closeBtn, innerModal, body } = refs;\nlet queue;\nlet watched;\nasync function updateVar() {\n  if (auth.currentUser === null) {\n    queue = [];\n    watched = [];\n  } else {\n    const q = await readAllUserData(auth.currentUser.uid);\n    const w = await readAllUserData(auth.currentUser.uid);\n    queue = q.userDataQueue || [];\n    watched = w.userDataWatch || [];\n  }\n}\n//\n\nsetTimeout(() => {\n  updateVar();\n}, 2500);\nallCardsSection.addEventListener('click', showModal);\n\nasync function updateMoviesList() {\n  if (auth.currentUser === null) {\n    const allMoviesListFromStorage = localStorage.getItem('currentFilmList');\n    const allMoviesList = JSON.parse(allMoviesListFromStorage);\n    return allMoviesList;\n  } else {\n    try {\n      const allMoviesListFromStorage = await currentFilmList(\n        auth.currentUser.uid\n      );\n      const allMoviesList = allMoviesListFromStorage.currentFilmList || [];\n      return allMoviesList;\n    } catch {\n      return [];\n    }\n  }\n}\nexport async function showModal(e) {\n  if (\n    e.target.nodeName === 'IMG' ||\n    e.target.className === 'title-modal-open' ||\n    e.target.className === 'trending-gallery__btn-more'\n  ) {\n    innerModal.innerHTML = '';\n    modal.classList.remove('hidden-movie-modal');\n    overflow.classList.remove('hidden-movie-modal');\n    overflow.classList.add('overflow-height');\n\n    allCardsSection.removeEventListener('click', showModal);\n    document.addEventListener('keydown', closeModalOnEsc);\n    closeBtn.addEventListener('click', closeModal);\n    overflow.addEventListener('click', closeModalOverflow);\n\n    const id =\n      e.target.nodeName === 'IMG'\n        ? e.target.dataset.id\n        : e.target.closest('li').dataset.id;\n    await createModal(id);\n    const top = window.scrollY;\n    body.style.position = 'fixed';\n    body.style.top = `-${top}px`;\n    const watchedBtn = document.querySelector('.modal__btn-watched');\n    const queueBtn = document.querySelector('.modal__btn-queue');\n    const watchTrailerBtn = document.querySelector(\n      '.movie-modal__btn-watch-trailer'\n    );\n    if (auth.currentUser !== null) {\n      watchedBtn.addEventListener('click', handleWatched);\n      queueBtn.addEventListener('click', handleQueued);\n    } else {\n      watchedBtn.setAttribute('disabled', 'disabled');\n      queueBtn.setAttribute('disabled', 'disabled');\n      Notiflix.Notify.info(\n        'Log in and you will have the opportunity to create your own movies library'\n      );\n    }\n    watchTrailerBtn.addEventListener('click', onTrailerBtnClick);\n  }\n}\nfunction closeModalOverflow(e) {\n  if (e.currentTarget === e.target) closeModal();\n}\nfunction closeModalOnEsc(e) {\n  if (e.code === 'Escape') closeModal();\n}\nfunction closeModal() {\n  modal.classList.add('hidden-movie-modal');\n  overflow.classList.add('hidden-movie-modal');\n  overflow.classList.remove('overflow-height');\n  allCardsSection.addEventListener('click', showModal);\n  document.removeEventListener('keydown', closeModal);\n  closeBtn.removeEventListener('click', closeModal);\n  overflow.removeEventListener('click', closeModalOverflow);\n  const top = body.style.top;\n  body.style.position = '';\n  body.style.top = '';\n  window.scrollTo(0, parseInt(top || '0') * -1);\n}\n\nasync function createModal(id) {\n  if (auth.currentUser === null) {\n    const currentList = updateMoviesList();\n    const rendered = await renderModal(currentList, id, watched, queue);\n    innerModal.innerHTML = rendered;\n  } else {\n    await updateVar();\n    const currentList = await updateMoviesList();\n    const rendered = await renderModal(currentList, id, watched, queue);\n    innerModal.innerHTML = rendered;\n  }\n}\n\nasync function handleWatched(e) {\n  const modalEl = document.querySelector('.movie-modal__main');\n\n  const movie = {\n    poster_path: modalEl.dataset.poster,\n    title: modalEl.dataset.title,\n    genre_ids: modalEl.dataset.genres,\n    release_date: modalEl.dataset.date,\n    vote_average: modalEl.dataset.votes,\n    id: modalEl.dataset.id,\n  };\n\n  const isInWatched = watched.some(film => film.id === movie.id);\n\n  if (e.target.innerText === 'ADD TO WATCHED') {\n    if (!isInWatched) {\n      watched.push(movie);\n      if (auth.currentUser === null) {\n        localStorage.setItem('movieWatched', JSON.stringify(watched));\n        e.target.innerText = 'Remove from watched';\n        const saved = JSON.parse(localStorage.getItem('movieWatched'));\n      } else {\n        await writeUserDataWatch(auth.currentUser.uid, watched);\n        e.target.innerText = 'Remove from watched';\n        const w = await readAllUserData(auth.currentUser.uid);\n        const saved = w.userDataWatch || [];\n      }\n\n      Notiflix.Notify.success('Added to watched!');\n    }\n  } else if (e.target.innerText === 'REMOVE FROM WATCHED') {\n    watched = watched.filter(film => film.id !== movie.id);\n    if (auth.currentUser === null) {\n      localStorage.setItem('movieWatched', JSON.stringify(watched));\n    } else {\n      await writeUserDataWatch(auth.currentUser.uid, watched);\n    }\n    e.target.innerText = 'Add to watched';\n    Notiflix.Notify.success('Removed from watched!');\n  }\n}\nasync function handleQueued(e) {\n  const modalEl = document.querySelector('.movie-modal__main');\n\n  const movie = {\n    poster_path: modalEl.dataset.poster,\n    title: modalEl.dataset.title,\n    genre_ids: modalEl.dataset.genres,\n    release_date: modalEl.dataset.date,\n    vote_average: modalEl.dataset.votes,\n    id: modalEl.dataset.id,\n  };\n\n  const isInQueued = queue.some(film => film.id === movie.id);\n  if (e.target.innerText === 'ADD TO QUEUE') {\n    if (!isInQueued) {\n      queue.push(movie);\n      if (auth.currentUser === null)\n        localStorage.setItem('movieQueue', JSON.stringify(queue));\n      else {\n        await writeUserDataQueue(auth.currentUser.uid, queue);\n      }\n      e.target.innerText = 'Remove from queue';\n\n      Notiflix.Notify.success('Added to queue!');\n    }\n  } else if (e.target.innerText === 'REMOVE FROM QUEUE') {\n    queue = queue.filter(film => film.id !== movie.id);\n    if (auth.currentUser === null) {\n      localStorage.setItem('movieQueue', JSON.stringify(queue));\n    } else {\n      await writeUserDataQueue(auth.currentUser.uid, queue);\n    }\n\n    e.target.innerText = 'Add to queue';\n\n    Notiflix.Notify.success('Removed from queue!');\n  }\n}\n","import makeHMTLString from '../templates/film_gallery_template';\nimport { searchRefs, tmdbAPI, scrollToTop, Notify } from './search-refs';\nimport {\n  renderPaginationInterface,\n  paginationSettings,\n  deletePaginationInterface,\n  tooglePagination,\n} from '../trending-search-main/trending-search.js';\n\nimport { userSearchObj } from './search-by-keyword';\nimport { showAdvacedSearchMenu } from './advanced-search.js';\n\n//find movies by year\nsearchRefs.galleryEl.addEventListener('click', findMoviesByYear);\n// export let userYearForPagination = '';\n\nfunction findMoviesByYear(event) {\n  //if not find-by-genre-js link - return\n  if (![...event.target.classList].includes('find-by-year-js')) return;\n\n  if (tooglePagination.isFilmsByYearShown) {\n    Notify.info('Movies of this year are already shown');\n    return;\n  }\n\n  deletePaginationInterface();\n\n  scrollToTop();\n  let year = Number(event.target.innerText);\n  userSearchObj.userQueryForPagination = '';\n  userSearchObj.userYearForPagination = year;\n\n  tmdbAPI.page = 1;\n\n  tmdbAPI\n    .fetchMoviesByYear(year)\n    .then(response => {\n      const { data } = response;\n\n      if (data.total_results === 0) {\n        Notify.failure('Search result not successful.');\n      }\n\n      scrollToTop();\n\n      //form search params window\n      searchRefs.advancedSearchChosenWindowEl.classList.remove(\n        'visually-hidden'\n      );\n      searchRefs.advancedSearchChosenEl.innerHTML = `<div class='advanced-search__chosen-option'><span class='advanced-search__search-key'>primary release year: </span>${year}</div>`;\n\n      showAdvacedSearchMenu();\n      searchRefs.advacedSearchYearInput.value = year;\n      // toggleAdvancedSearch();\n      // searchRefs.advancedSearchWrap.classList.add('hide');\n      // searchRefs.advacedSearchSubmitBtn.classList.add('hide');\n\n      //inserting images into gallery\n      searchRefs.galleryEl.innerHTML = makeHMTLString(data);\n      tooglePagination.isTrendingFilmsShown = false;\n      tooglePagination.isFilmsByQueryShown = false;\n      tooglePagination.isFilmsByGenreShown = false;\n      tooglePagination.isFilmsByAdvancedSearchShown = false;\n      tooglePagination.isFilmsByYearShown = true;\n\n      if (data.total_pages > 500) {\n        paginationSettings.totalPages = 500;\n      } else {\n        paginationSettings.totalPages = data.total_pages;\n      }\n\n      renderPaginationInterface(tmdbAPI.page, paginationSettings.totalPages);\n    })\n    .catch(error => {\n      console.error(error);\n      Notify.failure('No films with such year found!');\n    });\n}\n","import { makeHMTLStringWithGenre } from '../templates/film_gallery_template';\nimport {\n  searchRefs,\n  tmdbAPI,\n  TmdbAPI,\n  scrollToTop,\n  Notify,\n} from './search-refs';\nimport {\n  renderPaginationInterface,\n  paginationSettings,\n  deletePaginationInterface,\n  tooglePagination,\n} from '../trending-search-main/trending-search.js';\nimport { CLIENT_RENEG_LIMIT } from 'tls';\nimport { userSearchObj } from './search-by-keyword';\nimport { showAdvacedSearchMenu } from './advanced-search.js';\n\n// export let userGenreForPagination = '';\n\n//find movies by genre\nsearchRefs.galleryEl.addEventListener('click', findMoviesByGenre);\nlet genreID;\nfunction findMoviesByGenre(event) {\n  if (tooglePagination.isFilmsByAdvancedSearchShown) {\n    searchRefs.advancedSearchEl.reset();\n  }\n  if (![...event.target.classList].includes('find-by-genre-js'))\n    //if not find-by-genre-js link - return\n    return;\n\n  let genre = event.target.innerText.trim();\n  if (genre[genre.length - 1] === ',') {\n    genre = genre.slice(0, -1);\n  }\n\n  if (\n    genreID === TmdbAPI.genreIDs[genre.toLowerCase()] &&\n    tooglePagination.isFilmsByGenreShown === true\n  ) {\n    Notify.info('Movies of this genre are already shown');\n    return;\n  }\n\n  genreID = TmdbAPI.genreIDs[genre.toLowerCase()];\n\n  deletePaginationInterface();\n  userSearchObj.userGenreForPagination = genreID;\n  tmdbAPI.page = 1;\n\n  tmdbAPI\n    .fetchMoviesByGenre(`${TmdbAPI.genreIDs[genre.toLowerCase()]}`)\n    .then(response => {\n      const { data } = response;\n\n      if (data.total_results === 0) {\n        Notify.failure('Search result not successful.');\n      }\n      scrollToTop();\n\n      //form search params window\n      searchRefs.advancedSearchChosenWindowEl.classList.remove(\n        'visually-hidden'\n      );\n      searchRefs.advancedSearchChosenEl.innerHTML = `<div class='advanced-search__chosen-option'><span class='advanced-search__search-key'>genre: </span>${genre.toLowerCase()}</div>`;\n      showAdvacedSearchMenu();\n      updateSelectGenreOption(genre);\n\n      //form img gallery\n      searchRefs.galleryEl.innerHTML = makeHMTLStringWithGenre(data, genre);\n      tooglePagination.isTrendingFilmsShown = false;\n      tooglePagination.isFilmsByQueryShown = false;\n      tooglePagination.isFilmsByAdvancedSearchShown = false;\n      tooglePagination.isFilmsByYearShown = false;\n      tooglePagination.isFilmsByGenreShown = true;\n\n      if (data.total_pages > 500) {\n        paginationSettings.totalPages = 500;\n      } else {\n        paginationSettings.totalPages = data.total_pages;\n      }\n      //inserting images into gallery\n\n      renderPaginationInterface(tmdbAPI.page, paginationSettings.totalPages);\n    })\n    .catch(error => {\n      console.error(error);\n      Notify.failure('No films with such genre found!');\n    });\n}\n\nfunction updateSelectGenreOption(genre) {\n  const advacedSearchGenreSelect = document.querySelector(\n    '.advanced-search__genre'\n  );\n  advacedSearchGenreSelect.value = genre;\n  const options = Array.from(advacedSearchGenreSelect.options);\n  const optionToSelect = options.find(\n    item => item.label === genre.toLowerCase()\n  );\n  optionToSelect.selected = true;\n}\n"],"names":["parcelRequire","register","JSON","parse","$2Opyx","$faVjL","$281bf639961cca7e$export$2d85070453b14455","$281bf639961cca7e$export$d9bc31ce77766999","$281bf639961cca7e$export$e7c5b50100eb905e","$ff265cfbcb9471e5$export$d372f2f3c4d1b8e5","$09c9d82bad37f0c1$export$7cf8d7c091d5409d","$09c9d82bad37f0c1$export$d10a4a3cd335101","$09c9d82bad37f0c1$export$a6ba17dbfcb333c9","$09c9d82bad37f0c1$export$de706ff6dfd2b712","$09c9d82bad37f0c1$export$be899a9f048399d5","$09c9d82bad37f0c1$export$e5998c628a6b382d","$09c9d82bad37f0c1$export$2a61ec80d5ff4bad","$c1c25ad91386ca0f$export$d9bc31ce77766999","$c1c25ad91386ca0f$export$e7c5b50100eb905e","$2eff05e90379b033$export$2e2bcd8739ae039","async","data","fetch","default","parcedData","json","images","secure_base_url","profile_sizes","length","error","console","log","start","end","range","i","push","pageNumber","type","ELLIPSIS","key","FIRST_ELLIPSIS","value","isActive","SECOND_ELLIPSIS","options","currentPage","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","Math","max","totalPages","NEXT_PAGE_LINK","min","LAST_PAGE_LINK","PAGE","Error","Number","isNaN","boundaryPagesRange","siblingPagesRange","hidePreviousAndNextPageLinks","Boolean","hideFirstAndLastPageLinks","hideEllipsis","ellipsisSize","paginationModel","createPage","allPages","map","apply","firstPagesEnd","firstPages","lastPagesStart","lastPages","mainPagesStart","mainPagesEnd","mainPages","firstEllipsisPageNumber","firstEllipsis","secondEllipsisPageNumber","secondEllipsis","$8ROYx","$78c500d1ac7772d8$var$getGenresHTMLString","str","indexOfOther","toLowerCase","indexOf","spliced","slice","split","el","join","$78c500d1ac7772d8$var$addAdaptiveImgHTMLString","result","poster","poster_path","IMG_BASE_URL","title","id","$parcel$interopDefault","$de429e704a539a15$exports","$78c500d1ac7772d8$export$2e2bcd8739ae039","results","textDesc","overview","genres","getGenresString","genre_ids","release_date","$78c500d1ac7772d8$export$510d38a54e0c8215","genre","getGenresStringWithSearchedGenre","URL","resolve","import","meta","url","toString","$7Y9D8","$23759bcf95f34bb8$export$764f0218feee922f","$23759bcf95f34bb8$export$5cdaf498760a2f51","fetchGenres","$23759bcf95f34bb8$export$4f38aa43c8da2f33","galleryEl","document","querySelector","searchInputEl","searchForm","showAdvancedSearchEl","hideAdvancedSearchEl","advancedSearchEl","advancedSearchWrap","advancedSearchChosenWindowEl","advancedSearchChosenEl","resetAdvancedSearchBtn","advacedSearchSubmitBtn","advacedSearchYearInput","$23759bcf95f34bb8$export$f5d3771428a1f489","window","scroll","top","left","behavior","$0a7cd09758413f40$export$229bacdffc1f4aa2","primary_release_year","with_genres","sort_by","page","with_watch_monetization_types","without_genres","$0a7cd09758413f40$var$areOptionsGenerated","$0a7cd09758413f40$export$32ba60b3131f319a","setTimeout","classList","remove","parentNode","add","$0a7cd09758413f40$var$generateSelectOptions","$0a7cd09758413f40$export$80b9bfb1dba2b87f","toggle","form","genreOptionsHtmlStr","Object","values","selectGenreHtmlStr","excludeGenreHtmlStr","sortParamsStr","keys","sort_by_types","typeKey","insertAdjacentHTML","$0a7cd09758413f40$export$dda3656e53cf0cc0","optionsObj","fetchAdvancedMovieSearch","then","response","innerHTML","$1eeb2710677cac69$export$ef57d33f537f2013","isTrendingFilmsShown","isFilmsByQueryShown","isFilmsByAdvancedSearchShown","isFilmsByYearShown","isFilmsByGenreShown","total_pages","$1eeb2710677cac69$export$b0e697a4712aa77","$1eeb2710677cac69$export$dfec3028c0eb762c","catch","$0a7cd09758413f40$var$clearAdvancedSearchForm","reset","$0a7cd09758413f40$export$fcde629ab6c1a3a2","$1eeb2710677cac69$export$2e2bcd8739ae039","addEventListener","event","target","includes","$0a7cd09758413f40$export$270d262c8e6455ad","preventDefault","genreIDs","excludeGenre","sortParams","watch_monetization_types","monetization","year","forEach","undefined","test","$0a7cd09758413f40$var$isOptionsObjHasValues","Notify","failure","searchYear","parseInt","Date","getFullYear","$0a7cd09758413f40$var$checkYear","isTheSameSettings","warning","$1eeb2710677cac69$export$78f92611eb91c9fe","info","obj","reduce","acc","$0a7cd09758413f40$var$chosenAdvSearchParamsString","onResetAdvancedSearch","$a4d0bfb4a13719af$export$71a81439eef1b333","userQueryForPagination","userYearForPagination","userGenreForPagination","query","fetchFilmsByQuery","total_results","hidePreviousAndNextPagebtns","hideFirstAndLastPagebtns","$1eeb2710677cac69$var$screen","matchMedia","$1eeb2710677cac69$var$setPaginationSettings","matches","$1eeb2710677cac69$var$cardList","$1eeb2710677cac69$var$renderPopularFilms","$gjiCh","spinnerStart","films","markup","imageBaseURL","genreNames","item","genresNamesToRender","filmObject","genresList","genreNamesToRender","$1eeb2710677cac69$var$getGenreDeciphered","$1eeb2710677cac69$var$createMarkup","dir","spinnerStop","$krGWQ","refs","paginationContainer","removeEventListener","$1eeb2710677cac69$var$onLoadAnotherPage","filmsPaginationContainer","pagination","$281bf639961cca7e$exports","getPaginationModel","$1eeb2710677cac69$var$createBtn","$1eeb2710677cac69$var$createPaginationInterface","e","nodeName","clickedBtn","indexOfPageToLoad","dataset","fetchMoviesByYear","fetchMoviesByGenre","btnType","modifier","$1eeb2710677cac69$var$createIconBtnTemplate","disabled","$1eeb2710677cac69$var$createDigitBtnTemplate","isMobile","$5rZAK","allCardsSection","$843a0641ab6143f6$var$allCardsSection","modal","$843a0641ab6143f6$var$modal","overflow","$843a0641ab6143f6$var$overflow","closeBtn","$843a0641ab6143f6$var$closeBtn","innerModal","$843a0641ab6143f6$var$innerModal","body","$843a0641ab6143f6$var$body","$843a0641ab6143f6$var$queue","$843a0641ab6143f6$var$watched","$843a0641ab6143f6$var$updateVar","auth","currentUser","q","readAllUserData","uid","w","userDataQueue","userDataWatch","$843a0641ab6143f6$var$updateMoviesList","allMoviesListFromStorage","localStorage","getItem","currentFilmList","$843a0641ab6143f6$export$d7e8d4d4450c819c","className","$843a0641ab6143f6$var$closeModalOnEsc","$843a0641ab6143f6$var$closeModal","$843a0641ab6143f6$var$closeModalOverflow","closest","currentList","rendered","$1jYKa","renderModal","$843a0641ab6143f6$var$createModal","scrollY","style","position","watchedBtn","queueBtn","watchTrailerBtn","$843a0641ab6143f6$var$handleWatched","$843a0641ab6143f6$var$handleQueued","setAttribute","$37v9V","onTrailerBtnClick","currentTarget","code","scrollTo","modalEl","movie","date","vote_average","votes","isInWatched","some","film","innerText","setItem","stringify","writeUserDataWatch","success","filter","isInQueued","writeUserDataQueue","$f58b26d94e40ca36$var$genreID","trim","advacedSearchGenreSelect","Array","from","find","label","selected","$f58b26d94e40ca36$var$updateSelectGenreOption"],"version":3,"file":"index.92c8fd26.js.map"}